---
layout: essay
type: essay
title: Configuration Assimilation
date: 2017-01-26
labels:
  - GitHub
  - Configuration Management
  - Development Environment
---

Up to this point, my entire computer programming experience has been a solo endeavor. Therefore, Configuration Management is something completely new to me. 
Before taking ICS 314, I've heard about github, linux, shells, and the like, but honestly, I've never needed to learn what they were or how to use them. 
The only thing I'm slightly familiar with is Eclipse. I'm excited to finally learn about all the things I've heard so much about, although setting everything
up and learning how to use them all is a daunting task. I've already banged my head in frustration a few times since I started. It is slowly starting to come
together, and once everything is set up, I'm interested to see how much easier it makes my life. 

<div class="ui small rounded images">
  <img class="ui image" src="../images/frustration.jpg.jpg">
</div>

A lot of the information on configuration management is about the benefits of working in large groups on big projects. From an individual standpoint the, 
benefits are apparent as well. I like the idea of having my files and programs stored somewhere else in case something happens to my computer. The concept 
of pushing and pulling is new to me. I prefer working on a desktop over a laptop, and the convenience in switching between the two is a huge plus. Branching
is awesome too, there's been so many times when I've made changes to something that I shouldn't have and I wasn't able to reverse them. If I had the ability
to go back 5 minutes, it would have saved me hours. 

I think that git is more popular, because of GitHub. In fact, I've never heard of git, until I downloaded GitHub for the desktop. Especially for new people
who are just starting to learn programming and computer science, GitHub seems more prevalent than git. I don't know if that was always the case though, I
wasn't around before there was GitHub.  I'm sure the ideas and concepts behind git are what made GitHub so appealing. I'm going to take the easy answer, and
say that they are both popular because of each other. Neither one, by themselves, would be so widely used and well known without the other. 
